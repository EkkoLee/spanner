# Spanner global config file
# Users' ~/.spanner/config settings may override these

######################
# VM CONFIGURATION
######################

# This directory can be automatically prepended to non-absolute VM paths
vm.baseDirectory=/usr/local/buildtools/java

# Standard vm parameter options.
vm.args=

# Common configurations

vm.jdk-32-client.home=jdk-32
vm.jdk-32-client.args=-d32 -client

vm.jdk-32-server.home=jdk-32
vm.jdk-32-server.args=-d32 -server

vm.jdk-64-compressed.home=jdk-64
vm.jdk-64-compressed.args=-d64 -XX:+UseCompressedOops

vm.jdk-64-uncompressed.home=jdk-64
vm.jdk-64-uncompressed.args=-d64 -XX:-UseCompressedOops


######################
# INSTRUMENT CONFIG
######################

# To define new instrument configurations, provide an "instrument.<name>.class" property
# pointing to a concrete class that extends com.google.spanner.runner.Instrument, and add
# whichever other options it supports using "instrument.<name>.<optionName>=<value>".

# Run GC before every measurement?
instrument.arbitrary.options.gcBeforeEach=false

# Instrument "allocation"
# com.google.spanner.runner.AllocationInstrument
instrument.allocation.class=

# Track and log a summary of every individual allocation.  This enables better error messages for
# buggy benchmarks and prints detailed reports of allocation behavior in verbose mode.  N.B. This
# can increase the memory usage of the allocation worker significantly, so it is not recommended
# for benchmarks that do a lot of allocation.
instrument.allocation.options.trackAllocations=false


# Sets the maximum number of trials that can run in parallel.
runner.maxParallelism=2

######################
# RESULTS PROCESSORS
######################

results.file.class=
#com.google.spanner.runner.OutputFileDumper

results.upload.class=
#com.google.spanner.runner.HttpUploader

results.upload.options.url=https://microbenchmarks.appspot.com/
